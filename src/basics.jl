using Yao
using YaoPlots

# |0> = [1. + 0im, 0. + 0im]
# |1> = [0. + 0im, 1. + 0im]
# |+> = (|0> +  |1>) / ‚àö2
# |-> = (|0> + i|1>) / ‚àö2

circuit = zero_state(1, nbatch=2)
circuit = circuit |> put(1, 1=>H)
circuit.state

1/‚àö2
id =  [1 0
       0 1]

œÉ‚Çì =  [0 1
      1 0]

œÉ·µß = [0 -im
     im  0]

œÉùëß =  [1  0
       0 -1]

S = [1  0
     0 im]

T = ‚àöS        #[1 0
              # 0 ‚ÑØ^(im*(œÄ/4))]

hadamard = (1 / ‚àö2) * [1  1
                       1 -1]

R‚Çì = [cos(1/2)    -sin(1/2)im
     -sin(1/2)im   cos(1/2)]

R·µß = [cos(1/2) -sin(1/2)
     sin(1/2)  cos(1/2)]

Rùëß = [‚ÑØ^(1/2im)  0
      0         ‚ÑØ^(1/2im)]

c‚Çì =  [1 0 0 0
      0 1 0 0
      0 0 0 1
      0 0 1 0]

c·µß =  [1   0   0   0
      0   1   0   0
      0   0   0  -im
      0   0   im  0]

cùëß =  [1  0  0  0
       0  1  0  0
       0  0  1  0
       0  0  0 -1]

swap = [1 0 0 0
        0 0 1 0
        0 1 0 0
        0 0 0 1]

ising = [cos(1)    0        0       -im*sin(1)
         0         cos(1)  -sin(1)im 0
         0        -sin(1)im cos(1)   0
        -sin(1)im  0        0        cos(1)]

cc‚Çì =  [1 0 0 0 0 0 0 0
       0 1 0 0 0 0 0 0
       0 0 1 0 0 0 0 0
       0 0 0 1 0 0 0 0
       0 0 0 0 1 0 0 0
       0 0 0 0 0 1 0 0
       0 0 0 0 0 0 0 1
       0 0 0 0 0 0 1 0]

cswap = [1 0 0 0 0 0 0 0
         0 1 0 0 0 0 0 0
         0 0 1 0 0 0 0 0
         0 0 0 1 0 0 0 0
         0 0 0 0 1 0 0 0
         0 0 0 0 0 0 1 0
         0 0 0 0 0 1 0 0
         0 0 0 0 0 0 0 1]

bellstate = c‚Çì * (hadamard ‚äó id)

invbell = (hadamard ‚äó id) * c‚Çì

rotation‚Çì(Œ∏) = [cos(Œ∏/2)   -sin(Œ∏/2)im
               -sin(Œ∏/2)im  cos(Œ∏/2)]

rotation·µß(Œ∏) = [cos(Œ∏/2) -sin(Œ∏/2)
                sin(Œ∏/2)  cos(Œ∏/2)]

rotationùëß(Œ∏) = [‚ÑØ^(Œ∏/2im) 0
                0        ‚ÑØ^(Œ∏/2im)]

# q = CuQbit()
# q1 = CuQbit()
# q1 * œÉ‚Çì
# q * hadamard * hadamard * hadamard * hadamard
# [q, q1] * cnot
